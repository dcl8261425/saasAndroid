package com.herotculb.qunhaichat.crm.querychance;

import java.util.Date;
import java.util.List;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.TableLayout;
import android.widget.TextView;
import cn.pedant.SweetAlert.SweetAlertDialog;

import com.beardedhen.androidbootstrap.BootstrapButton;
import com.herotculb.qunhaichat.R;
import com.herotculb.qunhaichat.crm.notes.QueryNotesItemWindow;
import com.herotculb.qunhaichat.crm.querychance.window.AddLinkManWindow;
import com.herotculb.qunhaichat.crm.querychance.window.QueryLinkManWindow;
import com.herotculb.qunhaichat.dto.LinkManListDto;
import com.herotculb.qunhaichat.dto.NotesDto;
import com.herotculb.qunhaichat.util.DateUtil;
import com.herotculb.qunhaichat.widget.LoadingDialog;

public class QueryNotesAdapter extends BaseAdapter {
	private Activity  context;
	private List<NotesDto> list;
	
	public QueryNotesAdapter(Activity context, List<NotesDto> list) {
		super();
		this.context = context;
		this.list = list;
	}

	@Override
	public int getCount() {
		// TODO 自动生成的方法存根
		return list.size();
	}

	@Override
	public Object getItem(int position) {
		// TODO 自动生成的方法存根
		return list.get(position);
	}

	@Override
	public long getItemId(int position) {
		// TODO 自动生成的方法存根
		return position;
	}

	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		// TODO 自动生成的方法存根
		final NotesDto dto = (NotesDto) getItem(position);
		LayoutInflater inflater = LayoutInflater.from(context);
		TableLayout gridLayout = (TableLayout) inflater.inflate(
				R.layout.crm_query_notes_list, null);
		TextView text  = (TextView) gridLayout.findViewById(R.id.crm_notes_name);
		TextView text1 = (TextView) gridLayout.findViewById(R.id.crm_notes_startdate);
		TextView text2 = (TextView) gridLayout.findViewById(R.id.crm_notes_enddate);
		TextView text3 = (TextView) gridLayout.findViewById(R.id.crm_notes_newdate);
		BootstrapButton add =(BootstrapButton) gridLayout.findViewById(R.id.crm_notes_add);
		BootstrapButton check =(BootstrapButton) gridLayout.findViewById(R.id.crm_notes_check);
		Date date = new Date();
		Date date1 = new Date();
		Date date2 = new Date();
		Long sdate = Long.parseLong(dto.getStartDate());
		Long edate = 0L;
		String endDate = "";
		if(!dto.getEndDate().equals("") && dto.getEndDate() != "null"){
			edate = Long.parseLong(dto.getEndDate());
			date1.setTime(edate);
			endDate = DateUtil.formatDateYYYY_MM_DD(date1);
		}
		Long udate = Long.parseLong(dto.getUpdateDate());
		date.setTime(sdate);
		date2.setTime(udate);
		String startDate = DateUtil.formatDateYYYY_MM_DD(date);
		String updateDate = DateUtil.formatDateYYYY_MM_DD(date2);
		text.setText("记录人："+dto.getNotesUserName());
		text1.setText("开始日期："+startDate);
		text2.setText("结束日期："+endDate);
		text3.setText("最新日期："+updateDate);
		add.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO 添加开发记录
				LoadingDialog dialog = new LoadingDialog(context, "正在获取数据");
				dialog.show();
//				GetLinkmanByIdHandler handler = 
//						new GetLinkmanByIdHandler(context, dialog, "update");
//				GetLinkmanByIdThread thread = 
//						new GetLinkmanByIdThread(context, dto.getId()+"", handler);
//				thread.start();
			}
		});
		check.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View arg0) {
				// TODO 查看历史记录
				Intent i = new Intent(context, QueryNotesItemWindow.class);  
				Bundle b = new Bundle(); 
				i.putExtras(b);  
				context.startActivityForResult(i, 0);
				context.overridePendingTransition(R.anim.modal_in, R.anim.modal_out);
			}
		});
		return gridLayout;
	}

}
