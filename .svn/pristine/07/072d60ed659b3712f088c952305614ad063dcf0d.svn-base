package com.herotculb.qunhaichat.weixin.getvip;

import java.util.List;
import java.util.Map;

import android.content.Context;
import android.os.Handler;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnLongClickListener;
import android.view.ViewGroup;
import android.view.WindowManager.LayoutParams;
import android.widget.AdapterView;
import android.widget.ListView;
import android.widget.PopupWindow;
import android.widget.SimpleAdapter;
import android.widget.TableLayout;
import android.widget.AdapterView.OnItemClickListener;
import cn.pedant.SweetAlert.SweetAlertDialog;

import com.beardedhen.androidbootstrap.BootstrapButton;
import com.herotculb.qunhaichat.HomeActivity;
import com.herotculb.qunhaichat.R;
import com.herotculb.qunhaichat.dto.ConpanyUserDto;
import com.herotculb.qunhaichat.dto.LinkManListDto;
import com.herotculb.qunhaichat.dto.WeiXinMenuTableDto;
import com.herotculb.qunhaichat.weixin.gailan.WeixinMenuManagerHandler.MenuChile;
import com.herotculb.qunhaichat.weixin.gailan.WeixinMenuManagerHandler.MenuLongChile;
import com.herotculb.qunhaichat.widget.LoadingDialog;

public class WeixinGetVipHandler extends Handler {
	HomeActivity context;
	ViewGroup view;
	LoadingDialog dialog;
	View viewp;
	
	public WeixinGetVipHandler(HomeActivity context, ViewGroup view,
			LoadingDialog dialog, View viewp) {
		super();
		this.context = context;
		this.view = view;
		this.dialog = dialog;
		this.viewp = viewp;
	}
	@Override
	public void handleMessage(android.os.Message msg) {
		super.handleMessage(msg);
		Map<String, Object> map = (Map<String, Object>)msg.obj;
		boolean b=(Boolean) map.get("success");
		if(b){
			TableLayout tableLayout=new TableLayout(context);
			tableLayout.setLayoutParams(new LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.FILL_PARENT));
			List<LinkManListDto> weiXinList = (List<LinkManListDto>) map.get("data");
			for(int i=0;i<weiXinList.size();i++){
				LinkManListDto dto = weiXinList.get(i);
				BootstrapButton bootstrapButton=new BootstrapButton(context);
				 bootstrapButton.setLayoutParams(new LayoutParams(LayoutParams.FILL_PARENT, 40));
				 bootstrapButton.setText(dto.getLinkManName());
				 view.addView(bootstrapButton);
//				 bootstrapButton.setOnClickListener(new MenuChile(dto,context,viewp));
//				bootstrapButton.setLongClickable(true);
//				bootstrapButton.setOnLongClickListener(new MenuLongChile(dto,context,viewp));
			}
			Log.e("-handleMessage---", "----");
		}else{
			new SweetAlertDialog(context, SweetAlertDialog.ERROR_TYPE)
            .setTitleText("出错了！")
            .setContentText((String)map.get("info"))
            .show();
		}
	}
	
	//点击主菜单时展开的
	public class MenuChile implements OnClickListener {
		private HomeActivity content;
		private LinkManListDto dto;
		List<Map<String, String>> moreList;
		private PopupWindow pwMyPopWindow;// popupwindow
		private ListView lvPopupList;// popupwindow中的ListView
		private int NUM_OF_VISIBLE_LIST_ROWS = 2;// 指定popupwindow中Item的数量
		private View viewp;
		
		public MenuChile(LinkManListDto dto,HomeActivity content,  View viewp) {
			this.content = content;
			this.dto = dto;
			this.viewp = viewp;
		}

		@Override
		public void onClick(View v) {
			// TODO 自动生成的方法存根
			if(dto != null){
				LoadingDialog dialog2 = new LoadingDialog(content, "正在获取数据");
				dialog2.show();
				ViewGroup viewGroup=(ViewGroup) content.findViewById(R.id.weixin_vip_list);
				WeixinGetVipHandler getVipHandler = new WeixinGetVipHandler(content, viewGroup, dialog2, viewp);
				WeixinGetVipThread getVipThread = new WeixinGetVipThread(content, "1", "10", "123", getVipHandler);
				getVipThread.start();
			}else{
				iniPopupWindow(dto,viewp);
				pwMyPopWindow.showAsDropDown(v);// 显示
			}
		}
		
		private void iniPopupWindow(final LinkManListDto dto,final View v2) {
			LayoutInflater inflater = (LayoutInflater) content
					.getSystemService(content.LAYOUT_INFLATER_SERVICE);
			View layout = inflater.inflate(R.layout.task_detail_popupwindow, null);
			lvPopupList = (ListView) layout.findViewById(R.id.lv_popup_list);
			pwMyPopWindow = new PopupWindow(layout);
			pwMyPopWindow.setFocusable(true);// 加上这个popupwindow中的ListView才可以接收点击事件
			
			lvPopupList.setAdapter(new SimpleAdapter(content, moreList,
					R.layout.list_item_popupwindow, new String[] { "share_key" },
					new int[] { R.id.tv_list_item }));
			lvPopupList.setOnItemClickListener(new OnItemClickListener() {

				@Override
				public void onItemClick(AdapterView<?> parent, View view,
						int position, long id) {
					// TODO 自动生成的方法存根
					
				}
				
			});
			// 控制popupwindow的宽度和高度自适应
			lvPopupList.measure(View.MeasureSpec.UNSPECIFIED,
					View.MeasureSpec.UNSPECIFIED);
			pwMyPopWindow.setWidth(lvPopupList.getMeasuredWidth());
			pwMyPopWindow.setHeight((lvPopupList.getMeasuredHeight() + 20)
					* NUM_OF_VISIBLE_LIST_ROWS);

			// 控制popupwindow点击屏幕其他地方消失
			pwMyPopWindow.setBackgroundDrawable(content.getResources().getDrawable(
					R.drawable.bg_popupwindow));// 设置背景图片，不能在布局中设置，要通过代码来设置
			pwMyPopWindow.setOutsideTouchable(true);// 触摸popupwindow外部，popupwindow消失。这个要求你的popupwindow要有背景图片才可以成功，如上
		}
	}
	public class MenuLongChile implements OnLongClickListener {
		
		List<Map<String, String>> moreList;
		private PopupWindow pwMyPopWindow;// popupwindow
		private ListView lvPopupList;// popupwindow中的ListView
		private int NUM_OF_VISIBLE_LIST_ROWS = 2;// 指定popupwindow中Item的数量
		private HomeActivity content;
		private LinkManListDto dto;
		private View v2;
		
		public MenuLongChile(LinkManListDto dto,HomeActivity content,  View v2) {
			this.content = content;
			this.dto = dto;
			this.v2 = v2;
		}

		@Override
		public boolean onLongClick(View v) {
			// TODO 自动生成的方法存根
			iniPopupWindow(dto,v2);
			pwMyPopWindow.showAsDropDown(v);// 显示
			return false;
		}
		
		private void iniPopupWindow(final LinkManListDto dto,final View v2) {
			
			LayoutInflater inflater = (LayoutInflater) content
					.getSystemService(content.LAYOUT_INFLATER_SERVICE);
			View layout = inflater.inflate(R.layout.task_detail_popupwindow, null);
			lvPopupList = (ListView) layout.findViewById(R.id.lv_popup_list);
			pwMyPopWindow = new PopupWindow(layout);
			pwMyPopWindow.setFocusable(true);// 加上这个popupwindow中的ListView才可以接收点击事件

			lvPopupList.setAdapter(new SimpleAdapter(content, moreList,
					R.layout.list_item_popupwindow, new String[] { "share_key" },
					new int[] { R.id.tv_list_item }));
			lvPopupList.setOnItemClickListener(new OnItemClickListener() {

				@Override
				public void onItemClick(AdapterView<?> parent, View view,
						int position, long id) {
					// TODO 自动生成的方法存根
					
				}
				
			});
			
			// 控制popupwindow的宽度和高度自适应
			lvPopupList.measure(View.MeasureSpec.UNSPECIFIED,
					View.MeasureSpec.UNSPECIFIED);
			pwMyPopWindow.setWidth(lvPopupList.getMeasuredWidth());
			pwMyPopWindow.setHeight((lvPopupList.getMeasuredHeight() + 20)
					* NUM_OF_VISIBLE_LIST_ROWS);

			// 控制popupwindow点击屏幕其他地方消失
			pwMyPopWindow.setBackgroundDrawable(content.getResources().getDrawable(
					R.drawable.bg_popupwindow));// 设置背景图片，不能在布局中设置，要通过代码来设置
			pwMyPopWindow.setOutsideTouchable(true);// 触摸popupwindow外部，popupwindow消失。这个要求你的popupwindow要有背景图片才可以成功，如上
		}
	}
}
