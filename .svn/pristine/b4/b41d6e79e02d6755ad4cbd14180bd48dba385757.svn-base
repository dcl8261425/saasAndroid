package com.herotculb.qunhaichat.weixin.gailan;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import android.annotation.SuppressLint;
import android.content.Context;
import android.os.Handler;
import android.util.Log;
import android.view.View.OnClickListener;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnLongClickListener;
import android.view.ViewGroup;
import android.view.WindowManager.LayoutParams;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ListView;
import android.widget.PopupWindow;
import android.widget.SimpleAdapter;
import android.widget.Toast;
import android.widget.AdapterView.OnItemClickListener;
import cn.pedant.SweetAlert.SweetAlertDialog;

import com.herotculb.qunhaichat.HomeActivity;
import com.herotculb.qunhaichat.R;
import com.herotculb.qunhaichat.dto.WeiXinMenuTableDto;
import com.herotculb.qunhaichat.widget.LoadingDialog;

public class WeixinMenuManagerHandler extends Handler {
	HomeActivity context;
	ViewGroup view;
	LoadingDialog dialog;
	
	
	public WeixinMenuManagerHandler(HomeActivity context, ViewGroup view,
			LoadingDialog dialog) {
		super();
		this.context = context;
		this.view = view;
		this.dialog = dialog;
		
	}

	@SuppressLint("ResourceAsColor")
	@Override
	public void handleMessage(android.os.Message msg) {
		super.handleMessage(msg);
		Map<String, Object> map = (Map<String, Object>) msg.obj;
		boolean b = (Boolean) map.get("success");
		if (b) {

			List<WeiXinMenuTableDto> weiXinList = (List<WeiXinMenuTableDto>) map
					.get("data");
			view.removeAllViews();
			for (int i = 0; i < weiXinList.size(); i++) {
				WeiXinMenuTableDto dat = weiXinList.get(i);
				if (dat.getPid() == 0) {
					// 是主菜单
					Button bootstrapButton = new Button(context);
					bootstrapButton.setLayoutParams(new LayoutParams(
							LayoutParams.FILL_PARENT, 80));
					bootstrapButton.setText(dat.getName());
					bootstrapButton.setPadding(5, 5, 5, 5);
					view.addView(bootstrapButton);
					bootstrapButton.setOnClickListener(new MenuChile(dat,context));
					bootstrapButton.setLongClickable(true);
					bootstrapButton.setOnLongClickListener(new MenuLongChile(dat,context));
					
				} else {
					// 子菜单
					Button bootstrapButton = new Button(context);
					bootstrapButton.setLayoutParams(new LayoutParams(
							LayoutParams.FILL_PARENT, 10,2));
					bootstrapButton.setPadding(5, 5, 5, 5);
					bootstrapButton.setText(dat.getName());
					bootstrapButton.setLongClickable(true);
					view.addView(bootstrapButton);
					bootstrapButton.setOnLongClickListener(new MenuLongChile(dat,context));
					
				}
			}
			dialog.hide();
			
		} else {
			dialog.hide();
			new SweetAlertDialog(context, SweetAlertDialog.ERROR_TYPE)
					.setTitleText("出错了！")
					.setContentText((String) map.get("info")).show();
		}
	}
	//点击主菜单时展开的
			public class MenuChile implements OnClickListener {
				private HomeActivity content;
				private WeiXinMenuTableDto dat;
				
				public MenuChile(WeiXinMenuTableDto dat,HomeActivity content) {
					this.dat = dat;
					this.content=content;
				}

				@Override
				public void onClick(View v) {
					LoadingDialog dialog2 = new LoadingDialog(content, "正在获取数据");
					dialog2.show();
					ViewGroup viewGroup=(ViewGroup) content.findViewById(R.id.weixin_gailan_menuManager_list_item);
					WeixinMenuManagerHandler weixinmenuManagerHandler=new WeixinMenuManagerHandler(content,viewGroup,dialog2);
					WeixinMenuManagerThread weixinmenuthread=new WeixinMenuManagerThread(content, String.valueOf(dat.getId()), weixinmenuManagerHandler);
					weixinmenuthread.start();
				}

			}
			public class MenuLongChile implements OnLongClickListener {

				List<Map<String, String>> moreList;
				private PopupWindow pwMyPopWindow;// popupwindow
				private ListView lvPopupList;// popupwindow中的ListView
				private int NUM_OF_VISIBLE_LIST_ROWS = 2;// 指定popupwindow中Item的数量
				private HomeActivity content;
				private WeiXinMenuTableDto dat;
				
				public MenuLongChile(WeiXinMenuTableDto dat,HomeActivity content) {
					this.dat = dat;
					this.content=content;
				}

				@Override
				public boolean onLongClick(View v) {
					// TODO Auto-generated method stub
					Log.e("长按键事件", "=====");
					boolean isp=dat.getPid()==0;
					iniData(isp,dat.getId());

					iniPopupWindow(dat);
					pwMyPopWindow.showAsDropDown(v);// 显示
					return false;
				}
				private void iniData(boolean isp,long id) {

					moreList = new ArrayList<Map<String, String>>();
					Map<String, String> map;
					map = new HashMap<String, String>();
					map.put("share_key", "修改");
					moreList.add(map);
					map = new HashMap<String, String>();
					map.put("share_key", "删除");
					moreList.add(map);
					if(isp){
					map = new HashMap<String, String>();
					map.put("share_key", "添加子项");
					moreList.add(map);
					}
				}

				private void iniPopupWindow(WeiXinMenuTableDto dat) {

					LayoutInflater inflater = (LayoutInflater) content
							.getSystemService(content.LAYOUT_INFLATER_SERVICE);
					View layout = inflater.inflate(R.layout.task_detail_popupwindow, null);
					lvPopupList = (ListView) layout.findViewById(R.id.lv_popup_list);
					pwMyPopWindow = new PopupWindow(layout);
					pwMyPopWindow.setFocusable(true);// 加上这个popupwindow中的ListView才可以接收点击事件

					lvPopupList.setAdapter(new SimpleAdapter(content, moreList,
							R.layout.list_item_popupwindow, new String[] { "share_key" },
							new int[] { R.id.tv_list_item }));
					lvPopupList.setOnItemClickListener(new OnItemClickListener() {
							
						@Override
						public void onItemClick(AdapterView<?> parent, View view,
								int position, long id) {
							String name= moreList.get(position).get("share_key");
							if(name.equals("修改")){
								
							}
							if(name.equals("删除")){
								
							}
							if(name.equals("修改子项")){
								
							}
						}
					});

					// 控制popupwindow的宽度和高度自适应
					lvPopupList.measure(View.MeasureSpec.UNSPECIFIED,
							View.MeasureSpec.UNSPECIFIED);
					pwMyPopWindow.setWidth(lvPopupList.getMeasuredWidth());
					pwMyPopWindow.setHeight((lvPopupList.getMeasuredHeight() + 20)
							* NUM_OF_VISIBLE_LIST_ROWS);

					// 控制popupwindow点击屏幕其他地方消失
					pwMyPopWindow.setBackgroundDrawable(content.getResources().getDrawable(
							R.drawable.bg_popupwindow));// 设置背景图片，不能在布局中设置，要通过代码来设置
					pwMyPopWindow.setOutsideTouchable(true);// 触摸popupwindow外部，popupwindow消失。这个要求你的popupwindow要有背景图片才可以成功，如上
				}
				

			}
			
}
